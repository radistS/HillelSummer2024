package lesson_26.solid;

public class LSPr {

}

// Принцип підстановки Лісков: Підкласи повинні замінювати суперкласи без порушення роботи програми.
// Підклас повинен реалізовувати всі методи базового класу так, щоб не порушувати його поведінку.

class Bird {
    // Метод для польоту, який повинні реалізовувати всі підкласи
    public void fly() {
        System.out.println("Птах летить");
    }
}

class Sparrow extends Bird {
    @Override
    public void fly() {
        System.out.println("Горобець летить");
    }
}

// Страус порушує принцип Лісков, оскільки не може літати
class Ostrich extends Bird {
    @Override
    public void fly() {
        // Порушення принципу Лісков: Страус не може літати, але наслідує метод fly()
        throw new UnsupportedOperationException("Страус не може літати");
    }
}

// Пояснення:
// Підкласи повинні повністю відповідати поведінці суперкласу.
// У цьому випадку, страус не повинен успадковувати метод fly(), оскільки він не літає.
